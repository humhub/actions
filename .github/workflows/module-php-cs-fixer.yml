name: Module PHP CS Fixer

on: workflow_call

jobs:
  php-cs-fixer:
    name: PHP Coding Standards Fixer
    runs-on: ubuntu-latest
    env:
      skip_phpcs: 'false'
    steps:
      - name: Checkout Module
        uses: actions/checkout@v4

      - name: Check if branch is allowed
        run: |
          ALLOWED_BRANCHES=("master" "main" "develop" "bs5")
          CURRENT_BRANCH="${GITHUB_REF_NAME}"
          if [[ ! " ${ALLOWED_BRANCHES[@]} " =~ " ${CURRENT_BRANCH} " ]]; then
            echo "skip_phpcs=true" >> $GITHUB_ENV
            echo "This workflow runs only for master, main, develop and bs5 branches."
          fi
        shell: bash

      - name: Check the commit message for skipping PHP-CS-Fixer
        if: env.skip_phpcs == 'false'
        run: |
          if git log -1 --pretty=%B | grep -q '\[SKIP-PHPCS\]'; then
            echo "skip_phpcs=true" >> $GITHUB_ENV
            echo "Skip PHP-CS-Fixer because the commit message contains [SKIP-PHPCS]."
          fi

      - name: Checkout PHP CS Fixer config
        if: env.skip_phpcs == 'false'
        uses: actions/checkout@v4
        with:
          path: phpcsfixer-config
          repository: humhub/actions

      - uses: actions/cache@v4
        if: env.skip_phpcs == 'false'
        with:
          path: phpcsfixer-config/.php-cs-fixer.cache
          key: ${{ runner.OS }}-${{ github.repository }}-phpcsfixer-${{ github.sha }}
          restore-keys: |
            ${{ runner.OS }}-${{ github.repository }}-phpcsfixer-

      - name: Run PHP-CS-Fixer
        if: env.skip_phpcs == 'false'
        uses: docker://oskarstark/php-cs-fixer-ga
        with:
          args: --config=phpcsfixer-config/.php-cs-fixer.php

      - name: Create branch and Pull Request for new changes
        if: env.skip_phpcs == 'false'
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          if git diff --quiet; then
            echo "No changes detected by PHP-CS-Fixer. Skipping commit and PR creation."
            exit 0
          fi
          PHP_FIXER_DATETIME=$(date +%Y-%m-%d-%H%M%S)
          git checkout -b "php-fixer/$PHP_FIXER_DATETIME"
          git add -u
          git commit -m "Autocommit PHP CS Fixer"
          git push origin "php-fixer/$PHP_FIXER_DATETIME"
          gh pr create \
            --title "PHP CS Fixer $PHP_FIXER_DATETIME" \
            --body "This Pull Request includes automated changes from PHP-CS-Fixer." \
            --base "${{ github.ref_name }}" \
            --head "php-fixer/$PHP_FIXER_DATETIME"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
